class Solution:
    def plusOne(self, digits: List[int]) -> List[int]:
        digits = digits[::-1]  # Reverse the list
        one,i = 1,0 # Initialize the carry to 1 & index zero

        while one: 
            if i < len(digits): #if index is inbound and not out of bound 
                if digits[i] == 9: # and still if digits are 9 in it so it will have a carry also 
                    digits[i] = 0 # so replace 9 to 0 their becoz we will add one to 9 so it will give 10 in which 1 will go as carry again
                else:
                    digits[i] += 1 # if digit is not 9 in that so we can add that digit simply with 1 and replace it 
                    one = 0 # after adding to 1 we will not have any caarry in this place so again make one to 0
            else:
                digits.append(1) # and if it is outbound that means digits are over or so we have to just add 1 in last as reaming carry  to it
                one = 0 # after adding carry also their is no carry remaining so again make it to 0
            i += 1 # to make work on while loop we have to incremenet i again and again untill it not meets the condition
        return digits[::-1] 
            
